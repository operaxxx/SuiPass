name: Smart Contract CI

on:
  push:
    paths:
      - "packages/contracts/**"
    branches: [main, develop]
  pull_request:
    paths:
      - "packages/contracts/**"
    branches: [main, develop]
  workflow_dispatch:

env:
  NODE_VERSION: "20"
  RUST_VERSION: "stable"

jobs:
  # Contract Compilation
  build:
    runs-on: ubuntu-latest
    name: Build Contracts

    steps:
      - uses: actions/checkout@v4

      - name: Install Sui CLI
        run: |
          curl -s https://install.sui.dev | sh
          echo ~/.local/bin >> $GITHUB_PATH

      - name: Install Rust
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
          components: rustfmt, clippy

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "pnpm"

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm bootstrap

      - name: Build contracts
        run: |
          cd packages/contracts
          pnpm build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: contract-build
          path: packages/contracts/build/

  # Contract Testing
  test:
    runs-on: ubuntu-latest
    name: Test Contracts
    needs: build

    strategy:
      matrix:
        network: [local, testnet]

    steps:
      - uses: actions/checkout@v4

      - name: Install Sui CLI
        run: |
          curl -s https://install.sui.dev | sh
          echo ~/.local/bin >> $GITHUB_PATH

      - name: Install Rust
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
          components: rustfmt, clippy

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "pnpm"

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm bootstrap

      - name: Start local Sui network (if local)
        if: matrix.network == 'local'
        run: |
          sui start --background
          sleep 10

      - name: Run contract tests
        run: |
          cd packages/contracts
          pnpm test

      - name: Generate test coverage
        run: |
          cd packages/contracts
          pnpm coverage

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          file: ./packages/contracts/coverage/lcov.info
          flags: contracts
          name: contract-coverage-${{ matrix.network }}

  # Gas Analysis
  gas-analysis:
    runs-on: ubuntu-latest
    name: Gas Analysis
    needs: build

    steps:
      - uses: actions/checkout@v4

      - name: Install Sui CLI
        run: |
          curl -s https://install.sui.dev | sh
          echo ~/.local/bin >> $GITHUB_PATH

      - name: Install Rust
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
          components: rustfmt, clippy

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "pnpm"

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm bootstrap

      - name: Run gas analysis
        run: |
          cd packages/contracts
          pnpm test:gas

      - name: Generate gas report
        run: |
          cd packages/contracts
          pnpm gas:report

      - name: Upload gas report
        uses: actions/upload-artifact@v4
        with:
          name: gas-analysis
          path: packages/contracts/reports/gas-analysis.json

  # Formal Verification
  formal-verification:
    runs-on: ubuntu-latest
    name: Formal Verification
    needs: build

    steps:
      - uses: actions/checkout@v4

      - name: Install Sui CLI
        run: |
          curl -s https://install.sui.dev | sh
          echo ~/.local/bin >> $GITHUB_PATH

      - name: Install Rust
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
          components: rustfmt, clippy

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "pnpm"

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm bootstrap

      - name: Run Move Prover
        run: |
          cd packages/contracts
          pnpm prove

      - name: Upload verification results
        uses: actions/upload-artifact@v4
        with:
          name: formal-verification
          path: packages/contracts/verification/

  # Deployment Test
  deployment-test:
    runs-on: ubuntu-latest
    name: Deployment Test
    needs: [test, gas-analysis]
    if: github.event_name == 'pull_request'

    steps:
      - uses: actions/checkout@v4

      - name: Install Sui CLI
        run: |
          curl -s https://install.sui.dev | sh
          echo ~/.local/bin >> $GITHUB_PATH

      - name: Install Rust
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
          components: rustfmt, clippy

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "pnpm"

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm bootstrap

      - name: Test deployment dry run
        run: |
          cd packages/contracts
          pnpm deploy:testnet --dry-run

      - name: Generate deployment report
        run: |
          cd packages/contracts
          pnpm deployment:report

      - name: Upload deployment report
        uses: actions/upload-artifact@v4
        with:
          name: deployment-test
          path: packages/contracts/deployment-test/
